{% set config = salt['pillar.get'](app_key) %}
{% set secrets = salt['pillar.get']("secrets-"+app_key) %}

[database]

; Postgres Database
host = {{ secrets['postgresql']['host'] }}
port = {{ secrets['postgresql'].get('port', '5432') }}
name = {{ secrets['postgresql']['database'] }}
user = {{ secrets['postgresql']['user'] }}
password={{ secrets['postgresql']['password'] }}

; Redis
{% for key, value in secrets['redis'].iteritems() %}
{{ key }} = {{ value }}
{% endfor %}

; Storage Directories
files_dir = {{ config['data_mount'] }}/packages
docs_dir = {{ config['data_mount'] }}/packagedocs

; S3 Buckets
files_bucket = {{ config['files_bucket'] }}
docs_bucket = {{ config['docs_bucket'] }}

; AWS Key
aws_access_key_id = {{ secrets['aws']['aws_access_key_id'] }}
aws_secret_access_key = {{ secrets['aws']['aws_secret_access_key'] }}

; ElasticSearch
{% if secrets.get('releases_index_url', False) and secrets.get('releases_index_name', False) %}
releases_index_url = {{ secrets['releases_index_url'] }}
releases_index_name = {{ secrets['releases_index_name'] }}
{% endif %}

; Third-Party
pubsubhubbub = http://pubsubhubbub.appspot.com/

[webui]

; PyPI config
debug_mode = no
rss_file = /tmp/{{ app_key }}-rss.xml
packages_rss_file = /tmp/{{ app_key }}-packages_rss.xml

; Email
adminemail = PyPI Admin <admin@mail.pypi.python.org>
replyto = admin@mail.pypi.python.org

; Secrets
sshkeys_update = {{ config['path'] }}/src/sshkeys_update
key_dir = {{ config['path'] }}/secret
cheesecake_password =  {{ secrets['webui']['cheescake_password'] }}
reset_secret = {{ secrets['webui']['reset_secret'] }}

; URI Paths
simple_script = /simple
raw_package_prefix = /raw-packages
simple_sign_script = /serversig

; URLs
url = {{ config['url'] }}/pypi
files_url = {{ config['url'] }}/packages/
pydotorg = https://www.python.org/
package_docs_url = http://pythonhosted.org/

; StatusPage.io
statuspage_id = {{ config['statuspage_id'] }}

[smtp]
hostname = {{ secrets['smtp']['hostname'] }}
starttls = {{ secrets['smtp'].get('starttls', 'off') }}
auth = {{ secrets['smtp'].get('auth', 'off') }}
login = {{ secrets['smtp'].get('login', '') }}
password = {{ secrets['smtp'].get('password', '') }}

[passlib]
schemes = bcrypt_sha256, bcrypt, django_bcrypt, unix_disabled

[logging]
file =
mail_logger = {{ secrets['logging'].get('mail_logger', 'off') }}
fromaddr = {{ secrets['logging']['fromaddr'] }}
toaddrs = {{ secrets['logging']['toaddrs'] }}

[sentry]
dsn = {{ secrets['sentry']['dsn'] }}

[uwsgi]
uid={{ config['user'] }}
gid={{ config['group'] }}
wsgi-file = {{ config['path'] }}/src/pypi.wsgi
socket = /var/run/{{ config['name'] }}/pypi.sock
stats = /var/run/{{ config['name'] }}/pypi-stats.sock
pidfile = /var/run/{{ config['name'] }}/pypi.pid
daemonize = 127.0.0.1:8224
processes = {{ secrets['uwsgi'].get('processes', 2) }}
harakiri = 60
reload-on-as = 400
max-requests = 10000
master = 1
post-buffering = 8192
chmod-socket = 666
disable-logging = true
log-5xx = true
listen = 1024

; CDN API
[fastly]
api_domain = https://api.fastly.com/
api_key = {{ secrets['fastly']['api_key'] }}
service_id = {{ secrets['fastly']['service_id'] }}

[blocking]
blocked_timeout = {{ secrets.get('blocking', {}).get('blocked_timeout', 600) }}
blocked_attempts_ip = {{ secrets.get('blocking', {}).get('blocked_attempts_ip', 5) }}
blocked_attempts_user = {{ secrets.get('blocking', {}).get('blocked_attempts_user', 1000) }}
